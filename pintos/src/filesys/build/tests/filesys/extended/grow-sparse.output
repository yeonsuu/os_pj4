Copying tests/filesys/extended/grow-sparse into /tmp/aV6xRvMxpb.dsk...
Copying tests/filesys/extended/tar into /tmp/aV6xRvMxpb.dsk...
Writing command line to /tmp/TB6HL0WlqB.dsk...
qemu -hda /tmp/TB6HL0WlqB.dsk -hdb tmp.dsk -hdc /tmp/aV6xRvMxpb.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put grow-sparse put tar run grow-sparse
Pintos booting with 4,096 kB RAM...
373 pages available in kernel pool.
373 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 145 sector (72 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 159 sector (79 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...create
done.
Boot complete.
Putting 'grow-sparse' into the file system...
Putting 'tar' into the file system...
Executing 'grow-sparse':
(grow-sparse) begin
(grow-sparse) create "testfile"
(grow-sparse) open "testfile"
(grow-sparse) seek "testfile"
(grow-sparse) write "testfile"
Kernel PANIC at ../../filesys/inode.c:495 in inode_write_at(): assertion `0' failed.
Call stack: 0xc0107276 0xc010d2a1 0xc010c0a6 0xc010b46e 0xc010b06e 0xc0101745 0xc010191b 0x804a2a9 0x804815b 0x80488cb 0x80488f8.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../devices/timer.c:187 in real_time_sleep().
Timer: 69 ticks
Thread: 0 idle ticks, 64 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 200 reads, 523 writes
hd1:0: 159 reads, 0 writes
Console: 1356 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
